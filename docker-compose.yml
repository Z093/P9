version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: patientdb
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend-net

  mongo-express:
    image: mongo-express:1.0.2
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    ports:
      - "8081:8081"
    networks:
      - backend-net

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/patientdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

  notes-service:
    build:
      context: ./notes-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - mongodb
      - patient-service
    networks:
      - backend-net

  assessment-service:
    build:
      context: ./assessment-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
      - patient-service
      - notes-service
    networks:
      - backend-net

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - patient-service
      - notes-service
      - assessment-service
    networks:
      - backend-net

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - patient-service
      - notes-service
      - assessment-service
    networks:
      - backend-net

volumes:
  mysql-data:
  mongo-data:

networks:
  backend-net:
    driver: bridge